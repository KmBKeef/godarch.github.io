#!/bin/bash
set -e

WEB_DIR="$1"
TMP_DIR="$2"
DEPLOY_KEY="$3"

SOURCE_BRANCH="staging"
TARGET_BRANCH="master"

# Pull requests and commits to other branches shouldn't try to deploy, just build to verify
if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "$SOURCE_BRANCH" ]; then
    echo "skipping release"
    exit 0
fi

# Add our SSH key
chmod 600 $DEPLOY_KEY
eval `ssh-agent -s`
ssh-add $DEPLOY_KEY

if [ -e tmp/ ]; then
    rm -rf tmp/
fi

# Clone the existing gh-pages for this repo into out/
# Create a new empty branch if gh-pages doesn't exist yet (should only happen on first deply)
git clone git@github.com:godarch/godarch.github.io.git $TMP_DIR

pushd $TMP_DIR
git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
git rm -r .
popd

cp -r $WEB_DIR/* $TMP_DIR

pushd $TMP_DIR
# If there are no changes to the compiled out (e.g. this is a README update) then just bail.
if [ "$(git status --porcelain)" = "" ]; then
    echo "No changes to the output on this push; exiting."
    exit 0
fi

git config user.name "Travis CI"
git config user.email "$COMMIT_AUTHOR_EMAIL"

git add .
git commit -m "Deploy to GitHub Pages: ${SHA}"

# Now that we're all set up, we can push.
git push origin $TARGET_BRANCH

popd